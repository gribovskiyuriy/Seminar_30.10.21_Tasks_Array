/* Приветствую! Задание:
Имеется числовой массив A заполненный числами из отрезка [minValue; maxValue].
Создать на его основе масив B, отбрасывая те, которые нарушают порядок
-возрастания
-элементы, больше 8
-знакочередования

Решение:
1) Определение массива
2) Создание метода, который выдает случайные числа
3) Создание метода, которые проверяет числа на условие
4) Соединения методов основной программой Main

Есть первая версия программы, тоже рабочая, но выдает числа в консоль, не создавая массив.
Находится в предыдущем коммите.
*/

// Метод, который получает любой массив и редактирует его, изменяя его величину и значения на случайные.
int[] RandomArray(int[] currentArray)
{
    //Ввод параметров
    Console.WriteLine("Введите количество чисел в массиве");
    int n = Convert.ToInt32(Console.ReadLine());
    //Изменение длины массива
    Array.Resize(ref currentArray, n);
    Console.WriteLine("Введите минимальное число");
    int minValue = Convert.ToInt32(Console.ReadLine());
    Console.WriteLine("Введите максимальное число");
    int maxValue = Convert.ToInt32(Console.ReadLine()) + 1;
    //Перезапись массива на случайные значения
    for (int i = 0; i < currentArray.Length; i++) currentArray[i] = new Random().Next(minValue, maxValue);
    return currentArray;
}

// Метод сортировки значений по заданию:
// -в порядке возрастания
// -элементы, нарушающие условие < 8
// -знакочередования
int[] FormatingArray(int[] currentA, int MN)
{
    // currentA = входящий массив
    // currentB = новый массив с отсортированными числами
    // MN = число не превышающее размер (по заданию = 8), 
    // ni = индекс нового массива. Нужен для записи найденного числа в новый массив currentB
    // {MN + 1} - если программа не найдет искомое число, то она будет выдавать эту суммы (= 9).
    // -1 поставить не логично, так как она может появиться в нашем диапазоне.
    int[] currentB = { MN + 1 };
    int i = 0;
    int ni = 0;
    // Если программа не найдет число, удовлетворяющее условие, то она выдаст число 9.
    int max = currentA[i];
    // Определение первого числа, удовлетворяющее значению < 8.
    for (i = 0; i < currentA.Length; i++)
    {
        if (currentA[i] < MN)
        {
            max = currentA[i];
            currentB[ni] = max;
            break;
        }
    }
    // Определение следующих чисел в массиве, удовлетворяющих условию.
    while (i < currentA.Length)
    {
        if ((max <= MN) && (max < currentA[i]) && ((max < 0 && currentA[i] < 0) || (max > 0 && currentA[i] > 0)))
        {
            // Если число удовлетворяет всем условиям, то:
            // Оно записывается в max и будет сравниваться со следующими
            // Индекс нового массива увеличит размер на один, max - запишется в новый массив.
            max = currentA[i];
            ni++;
            Array.Resize(ref currentB, ni + 1);
            currentB[ni] = max;
        }
        i++;
    }
    return currentB;
}

//Метод печати массива
void PrintArray(int[] a)
{
    for (int i = 0; i < a.Length; i++) Console.Write(a[i] + " ");
}


// Main
// Число, не превышающее порога (в задании - 8)
int TaskN = 8;
// Программа позволяет использовать и заданный массив, и записать новый случайными числами.
int[] A = { -7, -5, -3, -1, -4, 0 };

/*  Создаем случайный массив
    Создаем новый массив с отсортированными числами
    Печатаем полученный массив  */
int[] result = RandomArray(A);
int[] B = FormatingArray(result, TaskN);
PrintArray(B);